apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

project.ext.vectoricons = [
    iconFontNames: [ 'MaterialIcons.ttf', 'EvilIcons.ttf' ,'MaterialCommunityIcons.ttf' ] // Specify font files
]

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

react {
    autolinkLibrariesWithApp()
}

/**
 * Enable ProGuard to minify Java bytecode in Release builds
 */
def enableProguardInReleaseBuilds = true // ✅ ENABLED ProGuard

/**
 * Enable Hermes for better JS performance & smaller APK size
 */
def hermesEnabled = true // ✅ ENABLED Hermes

/**
 * Enable resource shrinking to remove unused resources
 */
def enableShrinkResources = true // ✅ ENABLED Resource Shrinking

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.bookord"
    defaultConfig {
        applicationId "com.bookord"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

    }
    
    splits {
    abi {
        enable true
        reset()
        include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        universalApk false
    }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds // ✅ Minify Java bytecode
            shrinkResources enableShrinkResources // ✅ Remove unused resources
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // ✅ Split APKs per architecture (optional, but reduces size)
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false // If false, a universal APK will not be generated
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-vector-icons')

    if (hermesEnabled) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation 'org.webkit:android-jsc:+'
    }
}
